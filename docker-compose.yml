version: "3.3"
services:
  kong:
    container_name: kongpy
    image: kong-py
    build: ./kong
    restart: always
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/opt/conf/dbless_config/kong.yml
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_STREAM_ERROR_LOG=/dev/stderr
      - KONG_PLUGINS=bundled,py-auth
      - KONG_PLUGINSERVER_NAMES=py
      - KONG_PLUGINSERVER_PY_SOCKET=/usr/local/kong/python_pluginserver.sock
      - KONG_PLUGINSERVER_PY_START_CMD=/opt/kong-python-pdk/kong-pluginserver.py --no-lua-style --plugins-directory /opt/conf/kong-py-plugins
      - KONG_PLUGINSERVER_PY_QUERY_CMD=/opt/kong-python-pdk/kong-pluginserver.py --no-lua-style --plugins-directory /opt/conf/kong-py-plugins --dump-all-plugins
    volumes:
      - ./kong/plugins/py-auth:/opt/conf/kong-py-plugins
      - ./kong/config:/opt/conf/dbless_config
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    networks: 
      - asciiweb
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 1s
      timeout: 10s
      retries: 3
  web:
    container_name: goascii
    image: go-ascii
    build: .
    restart: always
    ports:
     - 8080
    networks: 
      - asciiweb
    environment:
      - GO_ASCII_DOMAIN=0.0.0.0
      - GO_ASCII_PORT=8080
      - GO_ASCII_DEBUG=true
      - GO_ASCII_LOGGER=LoggerPostgres
      - GO_ASCII_LOG_REPOSITORY=LogRepositoryPostgres
      - GO_ASCII_QUERY_REPOSITORY=QueryRepositoryInmemory
      - GO_ASCII_COMMAND_REPOSITORY=CommandRepositoryMongo
      - ASCII_MONGODB_USERNAME=root
      - ASCII_MONGODB_PASSWORD=example
      - ASCII_MONGODB_SERVER=mongodb
      - ASCII_MONGODB_PORT=27017
      - ASCII_POSTGRES_USERNAME=postgres
      - ASCII_POSTGRES_PASSWORD=postgres
      - ASCII_POSTGRES_SERVER=postgresdb
      - ASCII_POSTGRES_PORT=5432
      - ASCII_POSTGRES_DB=logdb
    depends_on:
      - postgres
      - mongodb
  mongodb:
    container_name: mongodb
    image: mongo  
    volumes:
      - ./mongodb:/data/db
    ports:
      - 27017
    networks: 
      - asciiweb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
  postgres:
    container_name: postgresdb
    image: postgres:10.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks: 
      - asciiweb
networks:
  asciiweb:
    name: ascii-web
